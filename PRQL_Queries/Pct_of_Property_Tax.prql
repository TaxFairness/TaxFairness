# Tax per acre based on zoning district
# Converted to PRQL 0.10.0 format

# dollars displays a numeric value as dollars with commas
let dollars = d -> s"""printf("$%,d",{d})"""

# pct computes the amount (percent) the new differs from old
let pct = o n -> 100.0*( n - o ) / o

# prtpct prints a floating point number with "%"
let prtpct = v -> s"printf('%1.1f%', {v})"

# twodig prints a floating point number with two decimal places
let twodig = v -> s"printf('%1.2f', {v})"

let TaxRate = 25.35

from ScrapedData
filter (SD_Version == 14)
# filter SD_Appraisal != SD_Assessment
derive District = case [
  SD_Zoning_District == "" => "Unknown",
  SD_Zoning_District == "ES" => "RD",
  SD_Zoning_District == "R" => "RD",
  SD_Zoning_District == "SFR" => "RD",
  SD_Zoning_District == "URD" => "RD",
  SD_Zoning_District == "CD" => "LCD",
  SD_Zoning_District == "LDC" => "LCD",
  true => SD_Zoning_District
]
group District (
aggregate {
  Acres= ( (sum SD_Lot_Size)),
  NumParcels = count this,
  Apprl = (sum SD_Appraisal),
  Assmt = (sum SD_Assessment),
  Tax = (sum SD_Assessment) *TaxRate/1000,
}
)
select {
  District,
  Acres,
  NumParcels,
  AvgAcres=Acres/NumParcels,
  Appraisal = (dollars Apprl),
  Assessment = (dollars Assmt),
  TotalTax = (dollars Tax),
  Tax,
  dollperacre = Tax / Acres,
}
sort { - dollperacre }
select {
  District,
  Acres,
  (twodig AvgAcres),
  NumParcels,
  Appraisal,
  Assessment,
  Tax = (dollars Tax),
  DollarsPerAcre = (dollars dollperacre)
}

# District	Acres	NumParcels	Appraisal	Assessment	Tax	DollarsPerAcre
# LCD	430.85	149	$73,607,400	$72,435,400	$1,836,237	$4,261
# BD	52	20	$8,820,600	$8,660,400	$219,541	$4,221
# Unknown	1822.65	109	$46,781,000	$41,854,300	$1,061,006	$582
# RD	18411.52	706	$368,985,350	$300,944,100	$7,628,932	$414
# SKIWAY	619.79	4	$7,274,300	$6,649,800	$168,572	$271
# ELD	2335.21	53	$18,388,500	$12,967,000	$328,713	$140
# SD	556	1	$625,400	$625,400	$15,853	$28
# MFD	7057.96	37	$13,543,300	$3,596,500	$91,171	$12