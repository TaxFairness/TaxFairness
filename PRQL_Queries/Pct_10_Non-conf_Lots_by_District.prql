# =======================================
# Find threshold for only 10% non-conforming lots
# Much trickiness was used to clean data:
# - Fudge the zoning districts to make up for Vision errors
# - Properties in Rural district with addresses on state roads 
#   (Orford, Dorchester, East Thetford, Dartmouth College)
#   get 3 acre minimum
# - Ignore condo's
# - Ignore parcels with lotsize = 0
# - Set "TooSmall" to 1 if < min. lot size
# =======================================

prql target:sql.sqlite

# dollars displays a numeric value as dollars with commas
let dollars = d -> s"""printf("$%,d",{d})"""

# pct computes the amount (percent) the new differs from old
let pct = o n -> 100.0*( n - o ) / o

# prtpct prints a floating point number with "%"
let prtpct = v -> s'printf("%1.1f%", {v})'

# sig_fig - print a value with n decimal places
# inserts comma for thousands/millions 
let sig_fig = v n -> s"printf('%,1.{n}f', {v})"

# isStateRoad == 1 if it's a state road
let isStateRoad = road -> case [
  road ~= "ORFORD " => 1,
  road ~= "DARTMOUTH COLLEGE" => 1,
  road ~= "DORCHESTER" => 1,
  road ~= "EAST THETFORD" => 1,
  true => 0,
]
# Clean up zoning districts
let CleanZoningDistrict = zd -> case [
  zd == "ES" => "RD",
  zd == "R" => "RD",
  zd == "SFR" => "RD",
  zd == "URD" => "RD",
  zd == "LCD" => "LCD",
  zd == "CD" => "LCD",
  zd == "LDC" => "LCD",
  zd == "SD" => "RD",
  zd == "" => "Unknown",
  true => zd,
]
# SubDistrict distinguishes between on-state-road and not
# Also might (but doesn't) distinguish between Lyme Center and Lyme Common
# Produces pleasing printable name
let SubDistrict = dist road -> case [
  dist == "RD" && road == 1 => "Rural-State Road",
  dist == "RD" && road == 0 => "Rural-Town Road",
  dist == "BD" => "Commercial",
  dist == "LCD" => "LymeCommon/Ctr",
  dist == "ELD" => "EastLyme",
  dist == "SKIWAY" => "Skiway",
  dist == "MFD" => "MtnForest",
  true => dist,
]
# Return current min lot size for a zoning district
let CurrentMinLotSize = zd -> case [
  zd == "LymeCommon/Ctr" => 1.0,
  zd == "Commercial" => 2.0,
  zd == "Skiway" => 2.0,
  zd == "Rural-State Road" => 3.0,
  zd == "Rural-Town Road" => 5.0,
  zd == "EastLyme" => 15.0,
  zd == "MtnForest" => 50.0,
  true => "?",
]
# Return lot size that produces only 10% non-conforming in a zoning district
# These values are determined by trial and error
let Pct10 = zd -> case [
  zd == "LymeCommon/Ctr" => 0.35,  # Lyme Common District or Lyme Center
  zd == "Commercial" => 2.0,
  zd == "Skiway" => 2.0,
  zd == "Rural-State Road" => 0.9,
  zd == "Rural-Town Road" => 0.95,
  zd == "EastLyme" => 0.75,
  zd == "MtnForest" => 20.0,
  true => "?",
]

# ============ begin  query ==============

# Using scraped data version 14 from Vision
from sd=ScrapedData
filter (SD_Version == 14)

derive { StateRoad = isStateRoad sd.SD_Street_Address }

# Clean up districts
derive { District = CleanZoningDistrict sd.SD_Zoning_District }

# ZDistrict distinguishes between on-state-road and not
# Also distinguishes between Lyme Center and Lyme Common
derive { ZDistrict = SubDistrict District StateRoad }

# For each zoning district, display the minimum lot size
derive { CurrentMin = CurrentMinLotSize ZDistrict }

# and the proposed size (only 10% non-conforming)
derive { Pct10LotSize = Pct10 ZDistrict }

# "TooSmall" is boolean showing whether the lot is smaller than MinLotSize 
derive TooSmall = case [
    sd.SD_Lot_Size >= Pct10LotSize => 0,
    true => 1
  ]
# Ignore condo's and zero-size lots
filter !(sd.SD_Description ~= "CONDO")
filter (sd.SD_Lot_Size != 0)
# Pick the interesting columns
select {
  sd.SD_PID,
  sd.SD_Street_Address,
  StateRoad,
  sd.SD_Zoning_District,
  ZDistrict,
  CurrentMin,
  Pct10LotSize,
  sd.SD_Lot_Size,
  TooSmall,
}
# Group by zoning district
group { ZDistrict } (
  aggregate {
    `Current min (ac)` = min CurrentMin,
    `"10%" min (ac)` = min Pct10LotSize,
    TotalAcres = (sig_fig (sum sd.SD_Lot_Size) 1),
    SmallParcels = sum TooSmall,
    TotalParcels = count this,
  }
)
# Compute the percent of small parcels vs all parcels
derive PctSmallParcels = (prtpct 100.0*SmallParcels/TotalParcels)
# Sort by zoning district
sort { `Current min (ac)` }

# ======== Percentile10 Results from April 2024 ==========
# ZDistrict	Current min (ac)	Proposed min (ac)	TotalAcres	SmallParcels	TotalParcels	PctSmallParcels
# LymeCommon/Ctr	1.0	0.35	430.9	15	139	10.8%
# EastLyme	15.0	0.75	2,335.2	6	51	11.8%
# Rural-State Road	3.0	0.9	3,567.6	14	134	10.4%
# Rural-Town Road	5.0	0.95	15,399.9	59	572	10.3%
# Commercial	2.0	2.0	52.0	0	1	0.0%
# Skiway	2.0	2.0	619.8	0	4	0.0%
# MtnForest	50.0	20.0	7,058.0	4	37	10.8%
# Unknown	?	?	1,822.7	82	82	100.0%
