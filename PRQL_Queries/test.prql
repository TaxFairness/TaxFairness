# =======================================
# Percentage of lot sizes that don't conform to the Ordinance
# Much trickiness was used to clean data:
# - Fudge the zoning districts to make up for Vision errors
# - Properties in Rural district with addresses on state roads 
#   (Orford, Dorchester, East Thetford, Dartmouth College)
#   get 3 acre minimum
# - Ignore condo's
# - Ignore parcels with lotsize = 0
# - Set "TooSmall" to 1 if < min. lot size
# =======================================

prql target:sql.sqlite

# dollars displays a numeric value as dollars with commas
let dollars = d -> s"""printf("$%,d",{d})"""

# pct computes the amount (percent) the new differs from old
let pct = o n -> 100.0*( n - o ) / o

# prtpct prints a floating point number with "%"
let prtpct = v -> s'printf("%1.1f%", {v})'

# sig_fig - print a value with n decimal places
# inserts comma for thousands/millions 
let sig_fig = v n -> s"printf('%,1.{n}f', {v})"

# Using scraped data version 14 from Vision
from sd=ScrapedData
filter (SD_Version == 14)

# StateRoad == 1 if it's a state road
derive StateRoad = case [
  sd.SD_Street_Address ~= "ORFORD " => 1,
  sd.SD_Street_Address ~= "DARTMOUTH COLLEGE" => 1,
  sd.SD_Street_Address ~= "DORCHESTER" => 1,
  sd.SD_Street_Address ~= "EAST THETFORD" => 1,
  true => 0,
]
# Clean up districts
derive District = case [
  sd.SD_Zoning_District == "ES" => "RD",
  sd.SD_Zoning_District == "R" => "RD",
  sd.SD_Zoning_District == "SFR" => "RD",
  sd.SD_Zoning_District == "URD" => "RD",
  sd.SD_Zoning_District == "LCD" => "LymeCommon/Ctr",
  sd.SD_Zoning_District == "CD" => "LymeCommon/Ctr",
  sd.SD_Zoning_District == "LDC" => "LymeCommon/Ctr",
  sd.SD_Zoning_District == "SD" => "RD",
  sd.SD_Zoning_District == "" => "Unknown",
  true => sd.SD_Zoning_District,
]

# ZDistrict distinguishes between on-state-road and not
# Also distinguishes between Lyme Center and Lyme Common
derive ZDistrict = case [
  District == "RD" && StateRoad == 1 => "Rural-State",
  District == "RD" && StateRoad == 0 => "Rural-Town",
  District == "BD" => "Commercial",
  District == "ELD" => "EastLyme",
  District == "SKIWAY" => "Skiway",
  District == "MFD" => "MtnForest",
  true => District,
]
select {
  sd.SD_Street_Address,
  sd.SD_Zoning_District,
  District,
  ZDistrict,
}
sort District

# # For each zoning district, add in the minimum lot size
# derive MinLotSize = case [
#   ZDistrict == "Common" => 1.0,  # Lyme Common District
#   ZDistrict == "LymeCtr" => 1.0, # Lyme Center
#   ZDistrict == "Commercial" => 2.0,
#   ZDistrict == "Skiway" => 2.0,
#   ZDistrict == "Rural-State" => 3.0,
#   ZDistrict == "Rural-Town" => 5.0,
#   ZDistrict == "EastLyme" => 15.0,
#   ZDistrict == "MtnForest" => 50.0,
#   true => "?",
# ]
# # "TooSmall" is boolean showing whether the lot is smaller than MinLotSize 
# derive TooSmall = case [
#     sd.SD_Lot_Size >= MinLotSize => 0,
#     true => 1
#   ]
# # Ignore condo's and zero-size lots
# filter !(sd.SD_Description ~= "CONDO")
# filter (sd.SD_Lot_Size != 0)
# # Pick the interesting columns
# select {
#   sd.SD_PID,
#   sd.SD_Street_Address,
#   StateRoad,
#   sd.SD_Zoning_District,
#   ZDistrict,
#   MinLotSize,
#   sd.SD_Lot_Size,
#   TooSmall,
# }
# # # Group by zoning district
# # group { ZDistrict } (
# #   aggregate {
# #     `MinLotSize` = min MinLotSize,
# #     TotalAcres = (sig_fig (sum sd.SD_Lot_Size) 1),
# #     SmallParcels = sum TooSmall,
# #     TotalParcels = count this,
# #   }
# # )
# # derive PctSmallParcels = (prtpct 100.0*SmallParcels/TotalParcels)

# # Sort by zoning district
# # sort { MinLotSize }
# filter (ZDistrict == "LymeCtr")
# # Compute the percent of small parcels vs all parcels

# # ======== Results from April 2024 ==========
# # ZDistrict	MinLotSize	TotalAcres	SmallParcels	TotalParcels	PctSmallParcels
# # Common	1.0	98.3	25	59	42.4%
# # LymeCtr	1.0	332.6	34	80	42.5%
# # Commercial	2.0	52.0	0	1	0.0%
# # Skiway	2.0	619.8	0	4	0.0%
# # Rural-State	3.0	3,567.6	45	134	33.6%
# # Rural-Town	5.0	15,399.9	198	572	34.6%
# # EastLyme	15.0	2,335.2	28	51	54.9%
# # MtnForest	50.0	7,058.0	9	37	24.3%
# # Unknown	?	1,822.7	82	82	100.0%